version: '3.7'

services:
  frontend:
    env_file:
      - ./frontend/.env
    build:
      context: ./frontend/next-app # Path to your frontend directory containing Dockerfile
      dockerfile: dev.Dockerfile
    environment:
      ENV_VARIABLE: ${ENV_VARIABLE}
      NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
    volumes:
      - ./frontend/next-app/src:/app/src
      - ./frontend/next-app/public:/app/public
    restart: always
    command: npm run dev
    ports:
      - 3000:3000 # Map host port 3000 to container port 3000 (Next.js default)
    depends_on:
      - backend

  backend:
    env_file:
      - ./backend/.env
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    command: uvicorn backend.main:app --reload --host 0.0.0.0 --port 8000
    container_name: backend
    volumes:
      - .:/usr/src/backend
    ports:
      - 8000:8000
    depends_on:
      - db_mysql
      - db_postgres

  db_mysql:
    image: mysql:5.7
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d/ # Mount the MySQL initialization script
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=main
      - MYSQL_USER=username
      - MYSQL_PASSWORD=password
    ports:
      - 3307:3306 # Map host port 3307 to container port 3306

  db_postgres:
    image: postgres:latest
    restart: always
    volumes:
      - ./postgres/main_db.sql:/docker-entrypoint-initdb.d/1-main_db.sql
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=main
    expose:
      - 5432

volumes:
  postgres_data:
  mysql_data:
